services:
  todo:
    build:
      context: .
      dockerfile: ./apps/todo-list/Dockerfile
    command: npm run start:dev todo-list
    env_file:
      - ./apps/todo-list/.env
    depends_on:
      - todo_postgres
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3500:3500'
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env
    depends_on:
      - auth_postgres
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3501:3501'

  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'

  todo_postgres:
    container_name: todo_postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_TODO_USER}
      - POSTGRES_PASSWORD=${POSTGRES_TODO_PASSWORD}
      - POSTGRES_DB=${POSTGRES_TODO_DB}
    volumes:
      - pg_main:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    restart: always

  auth_postgres:
    container_name: auth_postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_AUTH_USER}
      - POSTGRES_PASSWORD=${POSTGRES_AUTH_PASSWORD}
      - POSTGRES_DB=${POSTGRES_AUTH_DB}
    volumes:
      - pg_auth:/var/lib/postgresql/data
    ports:
      - '5431:5432'
    restart: always

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - '5050:80'
    restart: always
volumes:
  pg_main:
  pg_auth:
  pgadmin:
